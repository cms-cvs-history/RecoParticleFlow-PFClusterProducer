module particleFlowCluster = PFClusterProducer { 
    
    # if yes, rechits will be saved to the event as well as clusters
    # this is useful for redoing the clustering later
    untracked bool   produce_RecHits  = true

    untracked string ecalRecHitsEBModuleLabel         = "ecalRecHit"
    untracked string ecalRecHitsEBProductInstanceName = "EcalRecHitsEB"
    
    untracked string ecalRecHitsEEModuleLabel         = "ecalRecHit"
    untracked string ecalRecHitsEEProductInstanceName = "EcalRecHitsEE"
    
    untracked string ecalRecHitsESModuleLabel         = "ecalPreshowerRecHit"
    untracked string ecalRecHitsESProductInstanceName = "EcalRecHitsES"
    
    untracked string hcalRecHitsHBHEModuleLabel         = "hbhereco"
    untracked string hcalRecHitsHBHEProductInstanceName = ""
    
    untracked string caloTowersModuleLabel         = "towerMakerPF"
    untracked string caloTowersProductInstanceName = ""
    
    # perform clustering in ECAL ?
    untracked bool   process_Ecal       = true	
    
    # perform clustering in HCAL ?
    untracked bool   process_Hcal       = true
    
    # perform clustering in preshower ?
    untracked bool   process_PS         = true
    
    # clustering in ECAL ?
    untracked bool   clustering_Ecal    = true
    
    # clustering in HCAL ?
    untracked bool   clustering_Hcal    = true

    # clustering in HCAL: use calotowers for navigation ?
    untracked bool   clustering_Hcal_CaloTowers = false
    
    # clustering in preshower ?
    untracked bool   clustering_PS      = true

    # verbosity 
    untracked bool   verbose            = false


    # all thresholds are in GeV
    
    # cell threshold in ECAL barrel 
    double thresh_Ecal_Barrel = 0.08
    
    # seed threshold in ECAL barrel 
    double thresh_Seed_Ecal_Barrel = 0.23	
    
    # cell threshold in ECAL endcap 
    double thresh_Ecal_Endcap = 0.3
    
    # seed threshold in ECAL endcap 
    double thresh_Seed_Ecal_Endcap = 0.8	
    
    # n neighbours in ECAL 
    int32  nNeighbours_Ecal = 8
    
    # n crystals for position calculation in ECAL
    int32  posCalcNCrystal_Ecal = 9
    
    # sigma of the shower in ECAL 
    double showerSigma_Ecal = 5
    
    # p1 for position calculation in ECAL 
    double posCalcP1_Ecal = -1

        


    # cell threshold in HCAL barrel 
    double thresh_Hcal_Barrel = 0.8
    #double thresh_Hcal_Barrel = 0.
   
    # seed threshold in HCAL barrel 
    double thresh_Seed_Hcal_Barrel = 1.4	
    
    # cell threshold in HCAL endcap 
    double thresh_Hcal_Endcap = 0.8
    #double thresh_Hcal_Endcap = 0.
    
    # seed threshold in HCAL endcap 
    double thresh_Seed_Hcal_Endcap = 1.4	


    # n neighbours in HCAL 
    int32  nNeighbours_Hcal = 4
    
    # p1 for position calculation in HCAL 
    double posCalcP1_Hcal = 1.0

    # n crystals for position calculation in HCAL
    int32  posCalcNCrystal_Hcal = 5
    
    # sigma of the shower in HCAL     
    double showerSigma_Hcal = 10






    # cell threshold in preshower
    double thresh_PS = 0.000007
    
    # seed threshold in preshower
    double thresh_Seed_PS = 0.0005	

    # n neighbours in PS 
    int32  nNeighbours_PS = 8
    
    # p1 for position calculation in PS 
    double posCalcP1_PS = 0.

    # n crystals for position calculation in PS
    int32  posCalcNCrystal_PS = -1

    # sigma of the shower in preshower     
    double showerSigma_PS = 0.2

 
    # depth correction for ECAL clusters:
    #   0: no depth correction
    #   1: electrons/photons - depth correction is proportionnal to E
    #   2: hadrons - depth correction is fixed
    int32  depthCor_Mode = 1
    
    # in mode 1, depth correction = A *( B + log(E) )
    # in mode 2, depth correction = A 
    double depthCor_A =  0.89
    double depthCor_B =  7.4
    # under the preshower, the depth is smaller, but the material is 
    # the same
    double depthCor_A_preshower = 0.89
    double depthCor_B_preshower = 4.0
    
}
