process USER2 =  {

    # initialize  MessageLogger
    service = MessageLogger  {
	untracked vstring destinations   = { "cout" }
	untracked vstring categories     = { "PFClusterProducer" }
	untracked vstring debugModules   = { "*" }
	untracked PSet cout = { 
	    untracked string threshold = "DEBUG"
	    untracked PSet INFO            = { untracked int32 limit = 0 }
	    untracked PSet DEBUG           = { untracked int32 limit = 0 }
	    untracked PSet PFClusterProducer = { untracked int32 limit = 10000000}
	} 
    }

    
    #input file, which should contain rechits and rectracks
    source = PoolSource
    {
	untracked vstring fileNames = {'rfio:/castor/cern.ch/user/c/cbern/CMSSW/CMSSW_1_2_0_pre1/SingleGammas_1/singlegamma_pf_10.root'}
	untracked int32 maxEvents = 10
    }
    
    include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"
    
    # all parameters for the clustering algorithm are defined here
    include "RecoParticleFlow/PFClusterProducer/data/pFClusterDefaults.cff"
    
    # output 
    module o2 = PoolOutputModule
    {
	untracked string fileName = "pfclusters.root" 
	untracked vstring outputCommands = 
	{
	    "drop *",
	    "keep recoPFRecHits_*_*_*",
	    "keep recoPFClusters_*_*_*"
	}
    }
    
    module dump = EventContentAnalyzer {}
    
    # 	path p = {dump} 
    path p = { particleFlowCluster } 
    endpath outpath = { o2 }
}
